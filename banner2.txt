//

import React, { useState, useEffect, useContext } from "react"
import "./banner.css"
import { assets } from "../../../assets/assets"
import { makeApi } from "../../../api/callApi"
import { ShopContext } from "../../../context/ShopContext"
import { Link, useNavigate } from "react-router-dom"

const Banner = () => {
	// /api/get-all-products-by-category/6612e7e4e7c1d7bf5589ec0c
	const [currentSlide, setCurrentSlide] = useState(0)
	const [backgroundColor, setBackgroundColor] = useState(null)
	const [backgroundCart, setBackgroundCart] = useState(null)
	const [animationDirection, setAnimationDirection] = useState(null)
	const [products, setProducts] = useState([])
	const navigate = useNavigate()

	const { cartItems, addToCart, removeFromCart } = useContext(ShopContext)
	useEffect(() => {
		async function fetchCategories() {
			try {
				// setLoading(true)
				const response = await makeApi(
					"/api/get-all-products-by-category/6612e7e4e7c1d7bf5589ec0c",
					"GET"
				)
				if (response.status === 200) {
					setProducts(response.data.products)
				}
			} catch (error) {
				console.log("Error fetching categories:", error)
			}
		}
		fetchCategories()
	}, [])
	console.log("Banner", products)
	const banner = [
		{
			id: products.length > 0 ? products[0]._id : "",
			title: products.length > 0 ? products[0].name : "",
			subTitle: "Premium Cookies",
			content: products.length > 0 ? products[0].description : "",
			banner_Image: products.length > 0 ? products[0].thumbnail : "",
			backgroundColor:
				"linear-gradient(180deg, rgba(255,102,92,1) 0%, rgba(254,165,159,1) 100%)",
			backgroundCart: "#E31E24",
		},
		{
			id: products.length > 0 ? products[1]._id : "",
			title: products.length > 0 ? products[1].name : "",
			subTitle: "Premium Cookies",
			content: products.length > 0 ? products[1].description : "",
			banner_Image: products.length > 0 ? products[1].thumbnail : "",
			backgroundCart: "#007897",
			backgroundColor: "linear-gradient(180deg, #00B7FF 0%, #BEDAE4 100%)",
		},
		{
			id: products.length > 0 ? products[2]._id : "",
			title: products.length > 0 ? products[2].name : "",
			subTitle: "Premium Cookies",
			content: products.length > 0 ? products[2].description : "",
			banner_Image: products.length > 0 ? products[2].thumbnail : "",
			backgroundColor:
				"linear-gradient(180deg, rgba(211,126,55,1) 0%, rgba(218,180,149,1) 100%)",
			backgroundCart: "#65321C",
		},
		{
			id: products.length > 0 ? products[3]._id : "",
			title: products.length > 0 ? products[3].name : "",
			subTitle: "Premium Cookies",
			content: products.length > 0 ? products[3].description : "",
			banner_Image: products.length > 0 ? products[3].thumbnail : "",
			backgroundColor:
				"linear-gradient(180deg, rgba(255,158,60,1) 0%, rgba(226,208,189,1) 100%)",
			backgroundCart: "#BB8248",
		},
		{
			id: products.length > 0 ? products[4]._id : "",
			title: products.length > 0 ? products[4].name : "",
			subTitle: "Premium Cookies",
			content: products.length > 0 ? products[4].description : "",
			banner_Image: products.length > 0 ? products[4].thumbnail : "",
			backgroundColor:
				"linear-gradient(180deg, rgba(130,201,90,1) 0%, rgba(172,205,153,1) 50%, rgba(193,204,187,1) 100%)",
			backgroundCart: "#519B29",
		},
	]

	const handlePrevSlide = () => {
		setCurrentSlide((prevSlide) =>
			prevSlide === 0 ? banner.length - 1 : prevSlide - 1
		)
		setAnimationDirection("prev")
	}

	const handleNextSlide = () => {
		setCurrentSlide((prevSlide) =>
			prevSlide === banner.length - 1 ? 0 : prevSlide + 1
		)
		setAnimationDirection("next")
	}

	useEffect(() => {
		// JavaScript code to handle arrow clicks
		const arrowLeft = document.querySelector(".arrow-btn img:first-child")
		const arrowRight = document.querySelector(".arrow-btn img:last-child")
		const bannerSlides = document.querySelectorAll(".slide")
		let currentSlideIndex = 0

		// Function to handle click on left arrow
		arrowLeft.addEventListener("click", () => {
			goToSlide(currentSlideIndex - 1)
		})

		// Function to handle click on right arrow
		arrowRight.addEventListener("click", () => {
			goToSlide(currentSlideIndex + 1)
		})

		// Function to navigate to a specific slide
		function goToSlide(index) {
			const totalSlides = bannerSlides.length
			currentSlideIndex = (index + totalSlides) % totalSlides // Ensure index wraps around for infinite loop
			bannerSlides.forEach((slide, i) => {
				slide.classList.toggle("active", i === currentSlideIndex)
			})
		}

		return () => {
			// Cleanup event listeners
			arrowLeft.removeEventListener("click", () => {})
			arrowRight.removeEventListener("click", () => {})
		}
	}, []) // Empty dependency array ensures this effect runs only once after initial render

	useEffect(() => {
		setBackgroundColor(banner[currentSlide].backgroundColor)
		setBackgroundCart(banner[currentSlide].backgroundCart)
	}, [currentSlide])

	const handleAddToCart = () => {
		const token = localStorage.getItem("token")
		if (!token) {
			navigate("/login") // Redirect to login page if not logged in
			return
		}
		addToCart(item.id)
	}

	return (
		<div
			className="banner"
			style={{ background: backgroundColor }}
		>
			<div
				className={`palji-banners ${animationDirection}`}
				style={{ transform: `translateX(-${currentSlide * 100}%)` }}
			>
				{banner.map((item, index) => (
					<div
						key={index}
						className="slide banner-flex"
						style={{ backgroundColor: item.backgroundColor }}
					>
						<div className="left-banner">
							<div className="banner-info">
								<div
									className={`title ${currentSlide === index ? "show" : ""}`}
								>
									<h2>{item.title}</h2>
									<p>{item.subTitle}</p>
								</div>
								<p
									className={`content ${currentSlide === index ? "show" : ""}`}
								>
									{item.content}
								</p>
							</div>
							<div
								className="cart5"
								style={{ backgroundColor: backgroundCart }}
							>
								{/* <button style={{ backgroundColor: backgroundCart }}>
									Add to Cart
								</button> */}
								<div className="banner-item-cart">
									{!cartItems[item.id] ? (
										<div
											className="banner-item-addto-cart bg-black"
											style={{ backgroundColor: backgroundCart }}
											onClick={() => addToCart(item.id)}
											// onClick={handleAddToCart}
										>
											ADD TO CART
										</div>
									) : (
										<div className="banner-food-item-counter">
											<img
												onClick={() => removeFromCart(item.id)}
												src={assets.add_icon_red}
												alt=""
											/>
											<p className="banner-cart-item-no">
												{cartItems[item.id]}
											</p>
											<img
												onClick={() => addToCart(item.id)}
												src={assets.add_icon_green}
												alt=""
											/>
										</div>
									)}
								</div>
								{/* // */}
							</div>
						</div>
						<div className="right-banner">
							<img
								src={item.banner_Image}
								alt=""
							/>
						</div>
					</div>
				))}
			</div>
			<div className="arrow-btn">
				<img
					src={assets.left_arrow}
					alt=""
					onClick={handlePrevSlide}
				/>
				<img
					src={assets.right_arrow}
					alt=""
					onClick={handleNextSlide}
				/>
			</div>
		</div>
	)
}

export default Banner
